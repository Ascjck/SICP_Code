(load "huffman-tree-present.scm")
(load "make-leaf-set.scm")
(define (generate-huffman-tree pairs)
		(successive-merge (make-leaf-set pairs)))

(define (successive-merge ordered-set)
		(cond ((= 0 (length ordered-set)) '())
			  ((= 1 (length ordered-set)) (car ordered-set))
			  (else (let ((new-sub-tree (make-code-tree (car ordered-set) (cadr ordered-set)))
			  			  (remained (cddr ordered-set)))
			  			 (successive-merge (adjoin-set new-sub-tree remained))))))